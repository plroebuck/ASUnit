###
### SIMPLE
###

name: CI

# Controls when the workflow will run
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

## Default values
defaults:
  run:
    shell: bash

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  just_a_job_to_do:
    strategy:
      matrix:
        os: [macos-13, macos-14, macos-15]
    runs-on: ${{ matrix.os }}
    steps:
      - name: MachineDetails
        id: vars
        run: |
          system_profiler SPHardwareDataType | pbcopy
          pbpaste
          modelname=$( pbpaste | awk -F':' '/Model Name/ { print substr($2, 2) }' )"
          cpu=$( pbpaste | awk -F':' '/Processor Name/ { print substr($2, 2) }' )"
          cpuspeed=$( pbpaste | awk -F':' '/Processor Speed/ { print substr($2, 2) }' )"
          ncpus=$( pbpaste | awk -F':' '/Number of Processors/ { print sprintf("%d", $2) }' )"
          ncores=$( pbpaste | awk -F':' '/Number of Cores/ { print sprintf("%d", $2) }' )"
          memory=$( pbpaste | awk -F':' '/Memory/ { print substr($2, 2) }' )"
          cpubrand="$( sysctl -n machdep.cpu.brand_string | cut -d '-' -f 1- )"
          cpufreq_hz="$( sysctl -n hw.cpufrequency )"
          echo "CPU freq: ${cpufreq_hz} Hz"
          ghz=1000000000
          #---
          echo "modelname=$( echo ${modelname} )" >> $GITHUB_OUTPUT
          echo "cpu=$( echo ${cpu} )" >> $GITHUB_OUTPUT
          echo "cpuspeed=$( echo ${cpuspeed} )" >> $GITHUB_OUTPUT
          echo "ncpus=$( echo ${ncpus} )" >> $GITHUB_OUTPUT
          echo "ncores=$( echo ${ncores} )" >> $GITHUB_OUTPUT
          echo "arch=$( uname -p )" >> $GITHUB_OUTPUT
          echo "isa=$( uname -m )" >> $GITHUB_OUTPUT
          echo "memory=$( echo ${memory} )" >> $GITHUB_OUTPUT
          #---          
          echo "modelname=$( echo ${modelname} )" >> $GITHUB_OUTPUT
          echo "prodname=$( sw_vers -productName )" >> $GITHUB_OUTPUT
          echo "prodvers=$( sw_vers -productVersion )" >> $GITHUB_OUTPUT
          echo "build=$( sw_vers -buildVersion )" >> $GITHUB_OUTPUT
          echo "os=$( uname -sr )" >> $GITHUB_OUTPUT
          echo "applescript=$( osascript -e 'version of AppleScript' )" >> $GITHUB_OUTPUT
          echo "processor=$( echo $cpubrand | sed -e 's/([^][)]*)//g' )" >> $GITHUB_OUTPUT
          echo "cpufreq_ghz=$( echo "scale=2; $cpufreq_hz) / $ghz" | bc )" >> $GITHUB_OUTPUT

      - name: Display hardware information
        run: |
          echo "::group::Hardware Info"
          width=18
          printf "%-${width}s %s\n"  "ModelName:"       "${{ steps.vars.outputs.modelname }}"
          printf "%-${width}s %s\n"  "CPU:"             "${{ steps.vars.outputs.cpu }}"
          printf "%-${width}s %s\n"  "CPUSpeed:"        "${{ steps.vars.outputs.cpuspeed}} GHz"
          printf "%-${width}s %s\n"  "ProcessorSpeed:"  "${{ steps.vars.outputs.cpuspeed}} GHz"
          printf "%-${width}s %s\n"  "#CPUs:"           "${{ steps.vars.outputs.ncpus}} GHz"
          printf "%-${width}s %s\n"  "#Cores:"          "${{ steps.vars.outputs.ncores}} GHz"
          printf "%-${width}s %s\n"  "Architecture:"    "${{ steps.vars.outputs.arch }}"
          printf "%-${width}s %s\n"  "InstructionSet:"  "${{ steps.vars.outputs.isa }}"
          printf "%-${width}s %s\n"  "Memory:"          "${{ steps.vars.outputs.memory }}"
          echo "::endgroup::"
          
      - name: Display software information
        run: |
          echo "::group::Software Info"
          width=18
          printf "%-${width}s %s\n"  "ProductName:"     "${{ steps.vars.outputs.prodname }}"
          printf "%-${width}s %s\n"  "ProductVersion:"  "${{ steps.vars.outputs.prodvers }}"
          printf "%-${width}s %s\n"  "Build:"           "${{ steps.vars.outputs.build }}"
          printf "%-${width}s %s\n"  "OperatingSystem:" "${{ steps.vars.outputs.os }}"
          printf "%-${width}s %s\n"  "AppleScript:"     "${{ steps.vars.outputs.applescript }}"
          echo "::endgroup::"

      - name: Display environment
        run: |
          echo "::group::Environment"
          env | sort | sed 's/^/  /'
          echo "::endgroup::"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Display current directory and its contents
        run: |
          echo "::group::CWD (HOME)"
          pwd
          ls -al | sed 's/^/  /'
          cd $GITHUB_WORKSPACE
          echo "::group::CWD (GHWS)"
          pwd
          ls -al | sed 's/^/  /'
          echo "::endgroup::"
